@import "utils/variables";
@import "utils/mixins";

$max-iterations: 16;
// Iteractions
// margins
@include create-utility-with-iterations('margin', 'm', $max-iterations);
// paddings
@include create-utility-with-iterations('padding', 'p', $max-iterations);
// Without Iteractions

// display
$display_list: ('flex',
    'block',
    'content',
    'table',
    'grid',
);

@each $display in $display_list {
    $class: $display;
    $property: 'display';
    $value: $display;
    @include private-create-utility-property ($class, $property, $value);
}

// flex directions
// .flex-??? {
//     flex-direction: column;
//     flex-direction:row;
//     flex-direction:column-reverse;
//     flex-direction:row-reverse;
// }
$flex-directions: ('column',
    'row',
    'column-reverse',
    'row-reverse',
);

@each $flex-direction in $flex-directions {
    $class: flex-#{$flex-direction};
    $property: 'flex-direction';
    $value: $flex-direction;
    @include private-create-utility-property ($class, $property, $value);
}

// flex justify-contents 
// .justify- {
//     justify-content: baseline;
//     justify-content: center;
//     justify-content: end;
//     justify-content: start;
//     justify-content: space-around;
//     justify-content: space-between;
//     justify-content: space-evenly;
//     justify-content: left;
//     justify-content: right;
// }

$flex-justify-contents: ('baseline',
    'center',
    'end',
    'start',
    'space-around',
    'space-between',
    'space-evenly',
    'left',
    'right',
);

@each $flex-justify-content in $flex-justify-contents {
    $class: justify-#{$flex-justify-content};
    $property: 'justify-content';
    $value: $flex-justify-content;
    @include private-create-utility-property ($class, $property, $value);
}

// flex align-items 
// .align- {
//     align-items:baseline;
//     align-items:center;
//     align-items:flex-end;
//     align-items:flex-start;
// }

$flex-align-contents: ('baseline',
    'center',
    'flex-end',
    'flex-start',
);

@each $flex-align-content in $flex-align-contents {
    $class: align-#{$flex-align-content};
    $property: 'align-items';
    $value: $flex-align-content;
    @include private-create-utility-property ($class, $property, $value);
}

// width 
// .w- {
//     width: 25%;
//     width: 55%;
//     width: 75%;
//     width: 100%;
// }

$widths-contents: ('25': '25%',
    '33': '33.33%',
    '50': '50%',
    '66': '66.66%',
    '75': '75%',
    '100': '100%',
);

@each $width,
$width-size in $widths-contents {
    $class: w-#{$width};
    $property: 'width';
    $value: $width-size;
    @include private-create-utility-property ($class, $property, $value);
}

// height 
// .h- {
//     height: 25%;
//     height: 55%;
//     height: 75%;
//     height: 100%;
// }

$heights-contents: ('25': '25%',
    '33': '33.33%',
    '50': '50%',
    '66': '66.66%',
    '75': '75%',
    '100': '100%',
);

@each $height,
$height-size in $heights-contents {
    $class: h-#{$height};
    $property: 'height';
    $value: $height-size;
    @include private-create-utility-property ($class, $property, $value);
}

// vhs 
// .w- {
//     vh: 25%;
//     vh: 55%;
//     vh: 75%;
//     vh: 100%;
// }
$view_height-contents: ('25': '25%',
    '33': '33.33%',
    '50': '50%',
    '66': '66.66%',
    '75': '75%',
    '100': '100%',
);

@for $i from 1 to 10 {
    $increment: $i*10;

    $class: vh-#{$increment};
    $property: 'height';
    $value: #{$increment}vh;
    @include private-create-utility-property ($class, $property, $value);

    $class: font-weight-#{$increment * 10};
    $property: 'font-weight';
    $value: #{$increment * 10};
    @include private-create-utility-property ($class, $property, $value);
}